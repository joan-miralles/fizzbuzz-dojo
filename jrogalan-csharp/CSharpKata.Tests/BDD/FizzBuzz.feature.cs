// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CSharpKata.Tests.BDD
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("FizzBuzz Kata")]
    public partial class FizzBuzzKataFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "FizzBuzz.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "FizzBuzz Kata", "\tIn order to resolve the kata\r\n\tAs a software craftsman\r\n\tI want to be told the r" +
                    "esult (Fizz, Buzz, FizzBuzz or number) for any input number", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("FizzBuzz simple case")]
        [NUnit.Framework.CategoryAttribute("fizzbuzz_simple")]
        public virtual void FizzBuzzSimpleCase()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FizzBuzz simple case", new string[] {
                        "fizzbuzz_simple"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("the input number 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When("FizzBuzzKata is invoked with the given input 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then("the result should be equal to 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify FizzBuzz using the following")]
        [NUnit.Framework.TestCaseAttribute("1", "1", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2", "2", new string[0])]
        [NUnit.Framework.TestCaseAttribute("3", "Fizz", new string[0])]
        [NUnit.Framework.TestCaseAttribute("4", "4", new string[0])]
        [NUnit.Framework.TestCaseAttribute("5", "Buzz", new string[0])]
        [NUnit.Framework.TestCaseAttribute("6", "Fizz", new string[0])]
        [NUnit.Framework.TestCaseAttribute("7", "7", new string[0])]
        [NUnit.Framework.TestCaseAttribute("9", "Fizz", new string[0])]
        [NUnit.Framework.TestCaseAttribute("10", "Buzz", new string[0])]
        [NUnit.Framework.TestCaseAttribute("11", "11", new string[0])]
        [NUnit.Framework.TestCaseAttribute("12", "Fizz", new string[0])]
        [NUnit.Framework.TestCaseAttribute("13", "13", new string[0])]
        [NUnit.Framework.TestCaseAttribute("15", "FizzBuzz", new string[0])]
        [NUnit.Framework.TestCaseAttribute("30", "FizzBuzz", new string[0])]
        public virtual void VerifyFizzBuzzUsingTheFollowing(string value, string expected, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify FizzBuzz using the following", exampleTags);
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
 testRunner.Given(string.Format("the input number {0}", value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.When(string.Format("FizzBuzzKata is invoked with the input {0}", value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.Then(string.Format("the result should be equal to {0}", expected), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
